This process is awkward, but here is what I did:

Trying DejaVu LGC Sans Mono at 22 px.

1) Create rawchars.xcf with each character on a separate line, in ascii
order from char 32 (space) through 127 (del).  The image is wider than needed,
because the gimp text tool doesn't like to be too constrained.

I fiddled with the font size, until I got the characters to be 8 pels wide.
While I didn't expect it, "w" was wider than "M"!

I didn't trim the width at this point.

2) I copied that to flattenedchars.xcf so I wouldn't have to start over if
I saw something wrong.  Once flattened, you cannot go back to text edit mode.

Flatten the image, but first set some cursors to remember how tall the
textbox was.  Then, do a rectangular selection, exactly 16 pels wide, and
trim the canvas to eliminate the slack.

The characters seem to be biased to the right, so most have a white column on
the left, but again, 'w' goes the whole way.  Thus, a string of 'w' characters
won't have any space between them.  Export the result as flattenedchars.png.

3) Check using "file" to be sure the png is 8 wide then use ImageMagick to
convert it to a .h file.  Command is:

convert flattenedchars.png flattenedchars.h

I made one edit to the generated .h file:  Add one full line of 0x00 at the end
of the file, plus two more on the partial line.  I.e, the generated file will
end with:

	0x00, 0x00, 0x00, 0x00, 0x00, 0x00

but we replace that line with:

	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

Without that edit, the last character will be too short.  We need to end up
with line 8191 in the file created by genit.c in the next step.

4) Use the genit.c program to create chars.mif.  It turned out that the font
is 16x32, which is perfect.

To get 24 lines in 1024 rows, we want 16x42, so our vhdl will have to pad by
10 lines at the bottom.

This is also tricky, because most characters have one white row above the
character, but a few of the accent characters use that row!  The SKIP
parameter determines how much to throw away.  There is a little metadata
at the beginning of the PNG file, which we also need to discard.  This could
change in the future if Gimp changes its comment structure.

Here is how the "sharp sign" (#) should come out:

1120 : 0000000000000000; -- ................ #
1121 : 0000000000000000; -- ................
1122 : 0000000000000000; -- ................
1123 : 0000000000000000; -- ................
1124 : 0000000000000000; -- ................
1125 : 0000000000000000; -- ................
1126 : 0000000110001100; -- .......@@...@@..
1127 : 0000001100001100; -- ......@@....@@..
1128 : 0000001100011100; -- ......@@...@@@..
1129 : 0000001100011000; -- ......@@...@@...
1130 : 0000001100011000; -- ......@@...@@...
1131 : 0111111111111111; -- .@@@@@@@@@@@@@@@
1132 : 0111111111111111; -- .@@@@@@@@@@@@@@@
1133 : 0000011000110000; -- .....@@...@@....
1134 : 0000011000110000; -- .....@@...@@....
1135 : 0000110000110000; -- ....@@....@@....
1136 : 0000110001100000; -- ....@@...@@.....
1137 : 1111111111111110; -- @@@@@@@@@@@@@@@.
1138 : 1111111111111110; -- @@@@@@@@@@@@@@@.
1139 : 0001100001100000; -- ...@@....@@.....
1140 : 0001100011000000; -- ...@@...@@......
1141 : 0001100011000000; -- ...@@...@@......
1142 : 0011100011000000; -- ..@@@...@@......
1143 : 0011000111000000; -- ..@@...@@@......
1144 : 0000000000000000; -- ................
1145 : 0000000000000000; -- ................
1146 : 0000000000000000; -- ................
1147 : 0000000000000000; -- ................
1148 : 0000000000000000; -- ................
1149 : 0000000000000000; -- ................
1150 : 0000000000000000; -- ................
1151 : 0000000000000000; -- ................
